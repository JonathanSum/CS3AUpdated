// inserting into a string#include <iostream>#include <string>using namespace std;string roman_digit(int, string, string, string);int numToRoma();int romaTable(char letter);int romaToNum();int getWhatUserWant();int main() {    int whatUserWant;    whatUserWant = getWhatUserWant();    while (whatUserWant != 3) {        if (whatUserWant == 1) {            numToRoma();            whatUserWant = getWhatUserWant();        } else if (whatUserWant == 2) {            romaToNum();            whatUserWant = getWhatUserWant();        } else {            whatUserWant = getWhatUserWant();        }    }}int romaToNum() {    string romaString;    cout << "Please Enter a Roma integer that is less than 4000" << endl;    cin >> romaString;    int total;    total = romaTable(romaString.at(romaString.length() - 1));    for (int i = 0; i < romaString.length(); i++) {        int firstChar, secondChar;        firstChar = romaTable(romaString[i]);        secondChar = romaTable(romaString[i + 1]);        if (i + 1 < romaString.length()) {            if (firstChar >= secondChar) {                total += firstChar;            } else if (firstChar < secondChar) {                total -= firstChar;            }        }    }    cout << total << endl;    return 0;};int numToRoma() {    int n;    cout << "Please enter a integer" << endl;    cin >> n;    string result, roman_ones, roman_tens, roman_hundred, roman_thousand;    if (n > 1 && n < 39990) {        while (n != 0) {            roman_ones = roman_digit(n % 10, "I", "V", "X");            n = n / 10;            roman_tens = roman_digit(n % 10, "X", "L", "C");            n = n / 10;            roman_hundred = roman_digit(n % 10, "C", "D", "M");            n = n / 10;            roman_thousand = roman_digit(n % 10, "M", "", "");            n = n / 10;        }        cout << roman_thousand + roman_hundred + roman_tens + roman_ones << endl;    } else {        cout << "Please input a number that is less than 3999 and great than zero" << endl;    }}string roman_digit(int inputNum, string one, string five, string ten) {    if (inputNum == 10) {        return ten;    }    if (inputNum == 9) {        return one + ten;    }    if (inputNum == 8) {        return five + one + one + one;;    }    if (inputNum == 7) {        return five + one + one;    }    if (inputNum == 6) {        return five + one;    }    if (inputNum == 5) {        return one + ten;    }    if (inputNum == 4) {        return one + five;    }    if (inputNum == 1) {        return one + ten;    }    string first, second, third, fourth;    while (inputNum != 0) {        if (inputNum > 5) {            first = five;            inputNum -= 3;            cout << inputNum << endl;        } else if (inputNum < 5) {            second = one;            inputNum -= 1;            cout << inputNum << endl;        } else if (inputNum < 3) {            third = one;            inputNum -= 1;            cout << inputNum << endl;        } else if (inputNum < 3) {            fourth = one;            inputNum -= 1;            cout << inputNum << endl;        }    }    return (first + second + third + fourth);};int romaTable(char letter) {    try {        if (letter != 'I' && letter != 'V' && letter != 'X' && letter != 'L' && letter != 'C' && letter != 'D' &&            letter != 'M') {            throw 2;        }    } catch (int x) {        cout << "Please input something that is Roma letter" << endl;    }    if (letter == 'I') { return 1; }    if (letter == 'V') { return 5; }    if (letter == 'X') { return 10; }    if (letter == 'L') { return 50; }    if (letter == 'C') { return 100; }    if (letter == 'D') { return 500; }    if (letter == 'M') { return 1000; }    else { return 0; }}int getWhatUserWant() {    int choice;    cout << "click 1 to convert digit number to Roma number" << endl;    cout << "click 2 to convert Roma number to digit number" << endl;    cout << "click 3 to exit the program" << endl;    cin >> choice;    return choice;}